{"ast":null,"code":"import _slicedToArray from \"/Users/Kassidy/Desktop/sei/projects/project-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Kassidy/Desktop/sei/projects/project-2/src/Results.js\";\nimport React, { useState } from 'react';\nimport Main from './main/Main';\nimport './App.css';\n\nfunction Results(props) {\n  const _useState = useState({\n    imgLoad: true\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        finRend = _useState2[0],\n        setFinRend = _useState2[1];\n\n  function loadedMain() {\n    setFinRend(true);\n  }\n\n  function loadedMainRerun() {\n    setFinRend(false);\n  }\n\n  console.log(finRend); //map 20 times through array to show a page each time\n\n  if (props.list !== undefined) {\n    let list = props.list.map(item => {\n      // multiply by 20 for each page, will add 20 per page\n      if (finRend !== false) {\n        loadedMainRerun();\n        let set = props.page * 20; // // add set to item+item to map count up\n\n        item = item + set;\n        return React.createElement(Main, {\n          key: item,\n          id: item,\n          setId: props.setId,\n          loadedMain: loadedMain,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      id: \"results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"SUPER FACTS\")), list);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  });\n}\n\nexport default Results;","map":{"version":3,"sources":["/Users/Kassidy/Desktop/sei/projects/project-2/src/Results.js"],"names":["React","useState","Main","Results","props","imgLoad","finRend","setFinRend","loadedMain","loadedMainRerun","console","log","list","undefined","map","item","set","page","setId"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,WAAP;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,oBAEUH,QAAQ,CAAC;AACnCI,IAAAA,OAAO,EAAE;AAD0B,GAAD,CAFlB;AAAA;AAAA,QAEbC,OAFa;AAAA,QAEJC,UAFI;;AAMpB,WAASC,UAAT,GAAuB;AACnBD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AAED,WAASE,eAAT,GAA6B;AACzBF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAGDG,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ,EAfoB,CAgBpB;;AACA,MAAIF,KAAK,CAACQ,IAAN,KAAeC,SAAnB,EAA8B;AAE1B,QAAID,IAAI,GAAGR,KAAK,CAACQ,IAAN,CAAWE,GAAX,CAAeC,IAAI,IAAI;AAC9B;AACA,UAAIT,OAAO,KAAK,KAAhB,EAAuB;AACvBG,QAAAA,eAAe;AACf,YAAIO,GAAG,GAAGZ,KAAK,CAACa,IAAN,GAAa,EAAvB,CAFuB,CAGvB;;AACAF,QAAAA,IAAI,GAAGA,IAAI,GAAGC,GAAd;AAEA,eACI,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAED,IAAX;AACI,UAAA,EAAE,EAAEA,IADR;AAEI,UAAA,KAAK,EAAEX,KAAK,CAACc,KAFjB;AAGI,UAAA,UAAU,EAAEV,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAME;;AACF,aAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAT;AACH,KAhBU,CAAX;AAiBA,WACI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ,EAIKI,IAJL,CADJ;AASH;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH;;AAED,eAAeT,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport Main from './main/Main'\nimport './App.css';\n\nfunction Results(props) {\n\n    const [finRend, setFinRend] = useState({\n        imgLoad: true\n    })\n\n    function loadedMain () {\n        setFinRend(true)\n    }\n\n    function loadedMainRerun  () {\n        setFinRend(false)\n    }\n\n\n    console.log(finRend)\n    //map 20 times through array to show a page each time\n    if (props.list !== undefined) {\n\n        let list = props.list.map(item => {\n            // multiply by 20 for each page, will add 20 per page\n            if (finRend !== false) {\n            loadedMainRerun()\n            let set = props.page * 20\n            // // add set to item+item to map count up\n            item = item + set\n\n            return (\n                <Main key={item}\n                    id={item}\n                    setId={props.setId}\n                    loadedMain={loadedMain}\n                />\n            )}\n            return ( <div></div>)\n        })\n        return (\n            <div id='results'>\n                <div id='background'>\n                    <h1>SUPER FACTS</h1>\n                </div>\n                {list}\n            </div>\n\n        )\n    }\n    return (\n        <div></div>\n    )\n}\n\nexport default Results"]},"metadata":{},"sourceType":"module"}