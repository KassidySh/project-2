{"ast":null,"code":"import _slicedToArray from \"/Users/Kassidy/Desktop/sei/projects/project-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Kassidy/Desktop/sei/projects/project-2/src/Results.js\";\nimport React, { useState } from 'react';\nimport Main from './main/Main';\nimport './App.css';\n\nfunction Results(props) {\n  const _useState = useState({\n    load: true\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        load = _useState2[0],\n        setLoad = _useState2[1];\n\n  funciton;\n  console.log(load.load); //map 20 times through array to show a page each time\n\n  if (props.list !== undefined) {\n    let list = props.list.map(item => {\n      // multiply by 20 for each page, will add 20 per page\n      let set = props.page * 20; // // add set to item+item to map count up\n\n      item = item + set;\n      return React.createElement(Main, {\n        key: item,\n        id: item,\n        setId: props.setId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      id: \"results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"SUPER FACTS\")), list);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  });\n}\n\nexport default Results;","map":{"version":3,"sources":["/Users/Kassidy/Desktop/sei/projects/project-2/src/Results.js"],"names":["React","useState","Main","Results","props","load","setLoad","funciton","console","log","list","undefined","map","item","set","page","setId"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,WAAP;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,oBACIH,QAAQ,CAAC;AAC7BI,IAAAA,IAAI,EAAE;AADuB,GAAD,CADZ;AAAA;AAAA,QACbA,IADa;AAAA,QACPC,OADO;;AAIpBC,EAAAA,QAAQ;AAGRC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACA,IAAjB,EAPoB,CAQpB;;AACA,MAAID,KAAK,CAACM,IAAN,KAAeC,SAAnB,EAA8B;AAE1B,QAAID,IAAI,GAAGN,KAAK,CAACM,IAAN,CAAWE,GAAX,CAAeC,IAAI,IAAI;AAC9B;AACA,UAAIC,GAAG,GAAGV,KAAK,CAACW,IAAN,GAAa,EAAvB,CAF8B,CAG9B;;AACAF,MAAAA,IAAI,GAAGA,IAAI,GAAGC,GAAd;AAEA,aACI,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAED,IAAX;AACI,QAAA,EAAE,EAAEA,IADR;AAEI,QAAA,KAAK,EAAET,KAAK,CAACY,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAMH,KAZU,CAAX;AAaA,WACI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ,EAIKN,IAJL,CADJ;AASH;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH;;AAED,eAAeP,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport Main from './main/Main'\nimport './App.css';\n\nfunction Results(props) {\n    const [load, setLoad] = useState({\n        load: true\n    })\n    funciton\n\n\n    console.log(load.load)\n    //map 20 times through array to show a page each time\n    if (props.list !== undefined) {\n\n        let list = props.list.map(item => {\n            // multiply by 20 for each page, will add 20 per page\n            let set = props.page * 20\n            // // add set to item+item to map count up\n            item = item + set\n\n            return (\n                <Main key={item}\n                    id={item}\n                    setId={props.setId}\n                />\n            )\n        })\n        return (\n            <div id='results'>\n                <div id='background'>\n                    <h1>SUPER FACTS</h1>\n                </div>\n                {list}\n            </div>\n\n        )\n    }\n    return (\n        <div></div>\n    )\n}\n\nexport default Results"]},"metadata":{},"sourceType":"module"}